name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ
on: [push]
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:latest # You can specify any Docker image that fits your needs

    steps:
      - uses: actions/checkout@v3
        name: Check out code
      - name: Script Set 1
        run: |
          echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
          echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
          echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
          echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
          echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
          printenv | sort
      - name: Script Set 2 - List files in the repository
        run: |
          # ls ${{ github.workspace }} -alt
          ls -alt
          echo "üçè This job's status is ${{ job.status }}."

  docker:
    runs-on: ubuntu-latest
    container:
      image: docker:latest # Running Docker commands inside Docker container (Docker-in-Docker)
      options: --privileged # Required for Docker-in-Docker setup
    steps:
      - uses: actions/checkout@v3
        name: Check out code for Docker build and push
      - name: Script Set 2 - List files in the repository
        run: |
          ls  -alt
          echo "üçè This job's status is ${{ job.status }}."    
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - 
        name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          cache-from: type=registry,ref=${{ vars.DOCKER_USERNAME }}/${{ vars.DOCKER_IMAGE_NAME }}:latest
          cache-to: type=inline          
          tags: |
            ${{ vars.DOCKER_USERNAME }}/${{ vars.DOCKER_IMAGE_NAME }}:latest,
            ${{ vars.DOCKER_USERNAME }}/${{ vars.DOCKER_IMAGE_NAME }}:${{ github.sha }},
            ${{ vars.DOCKER_USERNAME }}/${{ vars.DOCKER_IMAGE_NAME }}:${{ github.run_id }},
            ${{ vars.DOCKER_USERNAME }}/${{ vars.DOCKER_IMAGE_NAME }}:${{ github.ref_name }}
